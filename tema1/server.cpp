/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "oauth.h"
#include "helpers_server.h"

struct tokken create_token() {
	struct tokken new_token;
	new_token.type = "Empty token";
}


// TODO:continue from here
struct ser_response *
request_autorization_1_svc(struct cl_request *argp, struct svc_req *rqstp)
{
	static struct ser_response  result;

	std::cout << argp->client_id << std::endl;
	std::cout << argp->tokken.type << std::endl;

	/*
	 * insert server code here
	 */
	result.message = "Message";
	result.auto_token = create_token();
	result.access_token = create_token();
	result.refresh_token = create_token();

	return &result;
}

struct ser_response *
request_approve_1_svc(struct cl_request *argp, struct svc_req *rqstp)
{
	static struct ser_response  result;

	/*
	 * insert server code here
	 */

	result.message = "Message";
	result.auto_token = create_token();
	result.access_token = create_token();
	result.refresh_token = create_token();

	return &result;
}

struct ser_response *
request_access_token_1_svc(struct cl_request *argp, struct svc_req *rqstp)
{
	static struct ser_response  result;

	/*
	 * insert server code here
	 */

	result.message = "Message";
	result.auto_token = create_token();
	result.access_token = create_token();
	result.refresh_token = create_token();

	return &result;
}

struct ser_response *
validate_delegated_action_1_svc(struct cl_request *argp, struct svc_req *rqstp)
{
	static struct ser_response  result;

	/*
	 * insert server code here
	 */

	result.message = "Message";
	result.auto_token = create_token();
	result.access_token = create_token();
	result.refresh_token = create_token();

	return &result;
}
